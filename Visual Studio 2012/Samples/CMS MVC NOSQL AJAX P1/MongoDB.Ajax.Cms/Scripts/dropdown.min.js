
/*
Dropdown jQuery Plugin 1.0

http://nasa8x.com

Copyright (c) 2011 Nasa8x

Dual licensed under the MIT and GPL licenses:
http://www.opensource.org/licenses/mit-license.php
http://www.gnu.org/licenses/gpl.html
*/
(function ($) {


    $.DropDownMenu = function (e, t, o) {
        this.menu = e;
        this.options = o;
        this.target = t;
        this.init();
    };



    $.DropDownMenu.prototype = {

        showTimeout: null,
        hideTimeout: null,

        viewport: function (e) {
            if (e) {
                return $.extend({
                    height: e.outerHeight(),
                    width: e.outerWidth(),
                    top: e.position().top,
                    left: e.position().left
                });
            }
            else {
                return $.extend({
                    height: $(window).height(),
                    width: $(window).width(),
                    top: $(window).scrollTop(),
                    left: $(window).scrollLeft()
                });
            }


        },

        init: function () {
            var m = this.menu;
            var o = this.options;

            switch (o.when) {
                default:
                case 'hover':
                    m.hover($.proxy(function (e) { this.resetTimeOut(); this.event = e; this.show(1); e.preventDefault(); }, this), $.proxy(function () { this.hide(1); }, this));
                    break;

                case 'click':
                    m.unbind('click.dropdown').bind('click.dropdown', $.proxy(function (e) {
                        e.preventDefault();
                        this.show(1);
                    }, this)).bind('mouseout.mvcforum', $.proxy(function() { this.hide(1); }, this));
                   
                    break;
            }

            this.addEvents();


        },

        addEvents: function () {

            /*   $(document).bind('click.dropdown', $.proxy(function (e) {
            if (e.target != this.target[0]) {
            this.hide();
            }
            }, this));*/


            this.target.hover(
                $.proxy(function () {
                    this.resetTimeOut();
                }, this),
                $.proxy(function () {
                    this.hide(1);
                }, this));

            /* this.target.unbind('.dropdown').bind('mouseover.dropdown', $.proxy(function () {
            this.clearTimeout();
            }, this))
            .bind('mouseout.dropdown', $.proxy(function () {
            this.hide(1);
            }, this));*/

        },

        resetTimeOut: function () {

            if (this.showTimeout) {
                clearTimeout(this.showTimeout);
            }

            if (this.hideTimeout) {
                clearTimeout(this.hideTimeout);
            }

        },

        show: function (f) {

            if (this.visibled) return;

            var o = this.options;
            if ((f == 1 || f == true) && o.timeout.show > 0) {
                this.resetTimeOut();
                this.showTimeout = setTimeout($.proxy(function () { this.show(); }, this), o.timeout.show);
                return;
            }

            this.visibled = true;

            if ($.isFunction(o.onShow)) {
                o.onShow.apply();
            }

            var v = this.viewport(this.menu);
            var m = this.target;
            var h = m.outerHeight();
            var w = m.outerWidth();
            var p = o.position;

            var winW = $(window).width();

            if (w + v.left + o.offsetY > winW) {
                p = 'bottom-right';
            }

            var t, l;

            switch (p) {

                default:
                case 'bottom-left':
                    l = v.left + o.offsetY;
                    t = v.top + v.height + o.offsetX;
                    break;

                case 'bottom-right':
                    l = v.left - w + v.width - o.offsetY;
                    t = v.top + v.height - o.offsetX;
                    break;
            }
            this.menu.addClass(o.activeClass);

            m.css({ top: t, left: l }).slideDown(o.duration.show);


        },

        hide: function (f) {
            if (!this.visibled) return;
            var o = this.options;
            if ((f == 1 || f == true) && o.timeout.hide > 0) {
                this.resetTimeOut();
                this.hideTimeout = setTimeout($.proxy(function () { this.hide(); }, this), o.timeout.hide);
                return;
            }
            else {

                this.visibled = false;

                this.target.slideUp(o.duration.hide, $.proxy(function () {
                    this.menu.removeClass(o.activeClass);
                    // close callback
                    if ($.isFunction(o.onHide)) {
                        o.onHide.apply();
                    }
                }, this));
            }
        }

    };

    $.fn.dropdown = function (options) {

        var defaults = {
            when: 'hover', //'hover', 'click'
            activeClass: 'selected',
            position: 'bottom-left',
            meta: 'dropdown',
            offsetX: 0,
            offsetY: 0,
            duration: {
                show: 500,
                hide: 500
            },
            timeout: {
                show: 0,
                hide: 500
            },
            onShow: null,
            onHide: null


        };

        return this.each(function () {
            var e = $(this);

            if ($.data(e, 'dropdown'))
                return;

            $.data(e, 'dropdown', true);

            var o = $.extend(true, {}, defaults, options || {});

            if (o.meta && $.metadata) {

                var md = e.metadata();

                $.extend(true, o, md[o.meta] || {});
            }

            var t = o.target ? $(o.target) : $('ul', e);


            new $.DropDownMenu(e, t, o);
        });


    };


})(jQuery);