<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Input Introduction</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- jQuery/Angular/Bootstrap -->
    <script src="http://code.jquery.com/jquery-2.0.0.min.js" type="text/javascript"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.min.js" type="text/javascript"></script>
    <script src="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css">
        
    <!-- Wijmo -->
    <script src="scripts/vendor/wijmo.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.input.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.grid.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.chart.min.js" type="text/javascript"></script>
    <script src="scripts/vendor/wijmo.angular.min.js" type="text/javascript"></script>
    <link href="styles/vendor/wijmo.min.css" rel="stylesheet">

    <!-- app scripts and styles -->
    <script src="scripts/app.js"></script>
    <script src="scripts/controllers/appCtrl.js"></script>
    <script src="scripts/directives/appDctv.js"></script>
    <link rel="stylesheet" href="styles/app.css">
</head>
<body ng-app="app" ng-controller="appCtrl">

    <div class="header">
        <div class="container">
            <h1>
                <img src="resources/wijmo5.png">
                Input 101
            </h1>
            <p>
                This page shows how to get started with Wijmo's Input controls.</p>
        </div>
    </div>

    <div class="container">

        <!-- Getting Started -->
        <div>
            <h2>Getting Started</h2>
            <p>
                Steps for getting started with Input controls in AngularJS applications:
            </p>
            <ol>
                <li>Add references to jQuery, AngularJS, Wijmo, and Wijmo's AngularJS directives.</li>
                <li>Add a controller to provide data and logic.</li>
                <li>Add a Wijmo Input control to the page and bind it to your data.</li>
                <li>(Optional) Add some CSS to customize the input control's appearance.</li>
            </ol>
            <div class="row">
                <div class="col-md-6">
                    <app-tab>
                        <app-tab-pane title="HTML">
                            <div class="pane-content">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;script src="scripts/jquery.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;script src="scripts/angular.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;script src="scripts/bootstrap.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;link rel="stylesheet" type="text/css" href="css/bootstrap.css"/&gt;
  &lt;script src="scripts/wijmo.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;script src="scripts/wijmo.input.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;script src="scripts/wijmo.grid.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;script src="scripts/wijmo.chart.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;script src="scripts/wijmo.angular.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;link rel="stylesheet" type="text/css" href="css/wijmo.css" /&gt;
  &lt;script src="scripts/app.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;link href="css/app.css" rel="stylesheet" type="text/css" /&gt;
&lt;/head&gt;
&lt;body ng-app="app" ng-controller="appCtrl"&gt;
  &lt;!-- this is the InputNumber directive --&gt;
  &lt;wj-input-number 
    value="price" 
    format="n"
    step=".5"&gt;
  &lt;/wj-input-number&gt;
&lt;/body&gt;
&lt;/html&gt;
                            </div>
                        </app-tab-pane>
                        <app-tab-pane title="JS">
                            <div class="pane-content">
// declare app module
var app = angular.module('app', ['wj']);

// app controller provides data
app.controller('appCtrl', function appCtrl($scope) {
    // value to bind to
    $scope.price = 3.5;
});
                            </div>
                        </app-tab-pane>
                    </app-tab>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <wj-input-number value="price" format="n" step=".5"></wj-input-number>
                </div>
            </div>
        </div>

        <!-- AutoComplete -->
        <div>
            <h2>AutoComplete</h2>
            <p>
                The AutoComplete control is an auto-complete control that allows you to filter its
                item list as you type, as well as select a value directly from its drop-down list.
            </p>
            <p>
                To use the AutoComplete control, you must minimally set the <b>itemsSource</b>
                property to an array of data in order to populate its item list. The AutoComplete
                control also offers several other properties to alter its behavior, such as the
                <b>cssMatch</b> property. The <b>cssMatch</b> property allows you to specify the CSS
                class that is used to highlight parts of the content that match your search terms.
            </p>
            <p>
                The example below uses an array of strings to populate the AutoComplete control's
                item list using the <b>itemsSource</b> property. To see a list of suggestions, type
                <b>"ab"</b> or <b>"za"</b> in the AutoComplete controls below.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <app-tab>
                        <app-tab-pane title="HTML">
                            <div class="pane-content">
&lt;div&gt;
  &lt;label&gt;itemsSource Only&lt;/label&gt;
  &lt;wj-auto-complete items-source="countries"&gt;
  &lt;/wj-auto-complete&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;label&gt;itemsSource &amp;amp; cssMatch&lt;/label&gt;
  &lt;wj-auto-complete
    items-source="countries"
    css-match="highlight"&gt;
  &lt;/wj-auto-complete&gt;
&lt;/div&gt;
                            </div>
                        </app-tab-pane>
                        <app-tab-pane title="CSS">
                            <div class="pane-content">
.highlight {
    background-color: #ff0;
    color: #000;
}
                            </div>
                        </app-tab-pane>
                    </app-tab>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div class="app-input-group">
                        <label>itemsSource Only</label>
                        <wj-auto-complete items-source="countries"></wj-auto-complete>
                    </div>
                    <div class="app-input-group">
                        <label>itemsSource &amp; cssMatch</label>
                        <wj-auto-complete items-source="countries" css-match="highlight"></wj-auto-complete>
                    </div>
                </div>
            </div>
        </div>

        <!-- ComboBox -->
        <div>
            <h2>ComboBox</h2>
            <p>
                The ComboBox control is very similar to the AutoComplete control, but rather than
                providing a list of suggestions as you type, the ComboBox will automatically complete
                and select the entry as you type.
            </p>
            <p>
                Like the AutoComplete control, you must minimally set the ComboBox's <b>itemsSource</b>
                property to an array of data in order to populate its item list. You may also want to
                specify whether the ComboBox is editable via the <b>isEditable</b> property. The
                <b>isEditable</b> property determines whether or not a user can enter values that do
                not appear in the ComboBox's item list.
            </p>
            <p>
                The example below uses two ComboBoxes bound to the same data source as the AutoComplete
                control above. The first ComboBox's <b>isEditable</b> property is set to false, while the
                second ComboBox's <b>isEditable</b> property is set to true.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <app-tab>
                        <app-tab-pane title="HTML">
                            <div class="pane-content">
&lt;div&gt;
  &lt;label&gt;Non-Editable&lt;/label&gt;
  &lt;wj-combo-box
   items-source="countries"
   is-editable="false"
   selected-value="comboSelectedVal"&gt;
  &lt;/wj-combo-box&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;label&gt;Editable&lt;/label&gt;
  &lt;wj-combo-box
    items-source="countries"
    is-editable="true"
    selected-value="comboSelectedVal"&gt;
  &lt;/wj-combo-box&gt;
&lt;/div&gt;
&lt;p&gt;
  &lt;b&gt;Selected Value: {&#8203;{ comboSelectedVal }}&lt;/b&gt;
&lt;/p&gt;
                            </div>
                        </app-tab-pane>
                    </app-tab>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div class="app-input-group">
                        <label>Non-Editable</label>
                        <wj-combo-box items-source="countries" is-editable="false" selected-value="comboSelectedVal">
                        </wj-combo-box>
                    </div>
                    <div class="app-input-group">
                        <label>Editable</label>
                        <wj-combo-box items-source="countries" is-editable="true" selected-value="comboSelectedVal">
                        </wj-combo-box>
                    </div>
                </div>
            </div>
        </div>

        <!-- InputDate and Calendar -->
        <div>
            <h2>InputDate &amp; Calendar</h2>
            <p>
                The InputDate control allows you to edit and select dates via a drop-down calendar,
                preventing you from entering an incorrect value. The InputDate's drop-down calendar
                was developed as a separate control and can be used be used independently
                from the InputDate control.</p>
            <p>
                Both InputDate and Calendar, specify several properties to alter the controls' behavior.
                The most commonly used properties include:</p>
            <ul>
                <li>
                    <b>value</b>: Specifies the date value for the control.</li>
                <li>
                    <b>min</b>: Specifies the minimum date value that can be entered in the control.</li>
                <li>
                    <b>max</b>: Specifies the maximum date value that can be entered in the control.</li>
            </ul>
            <p>
                The example below demonstrates how to use each of these properties.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <app-tab>
                        <app-tab-pane title="HTML">
                            <div class="pane-content">
&lt;div&gt;
  &lt;label&gt;Bound InputDate with min &amp;amp; max&lt;/label&gt;
  &lt;wj-input-date 
    value="today" 
    min="{&#8203;{ minDate | date }}" 
    max="{&#8203;{ maxDate | date }}"&gt;
  &lt;/wj-input-date&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;label&gt;Bound Calendar with min &amp;amp; max&lt;/label&gt;
  &lt;wj-calendar 
    style="width:300px;"
    value="today" 
    min="{&#8203;{ minDate | date }}"
    max="{&#8203;{ maxDate | date }}"&gt;
  &lt;/wj-calendar&gt;
&lt;/div&gt;
&lt;p&gt;
  &lt;b&gt;Selected Date: {&#8203;{ today | date }}&lt;/b&gt;
&lt;/p&gt;
                            </div>
                        </app-tab-pane>
                        <app-tab-pane title="JS">
                            <div class="pane-content">
var today = new Date();
$scope.today = today;
$scope.minDate = new Date(today.getFullYear(), 0, 1);
$scope.maxDate = new Date(today.getFullYear(), 11, 31);
                            </div>
                        </app-tab-pane>
                    </app-tab>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div class="app-input-group">
                        <label>Bound InputDate with min &amp; max</label>
                        <wj-input-date value="today" min="{{ minDate | date }}" max="{{ maxDate | date }}">
                        </wj-input-date>
                    </div>
                    <div class="app-input-group">
                        <label>Bound Calendar with min &amp; max</label>
                        <wj-calendar style="width:300px;">
                            value="today" 
                            min="{{ minDate | date }}" 
                            max="{{ maxDate | date }}" 
                        </wj-calendar>
                    </div>
                    <p>
                        <b>Selected Date: {{ today | date }}</b>
                    </p>
                </div>
            </div>
        </div>

        <!-- InputDate and InputTime -->
        <div>
            <h2>InputDate &amp; InputTime</h2>
            <p>
                Similar to the InputDate control, the InputTime control allows you to modify the time portion of
                a JavaScript date. The InputTime control shares many of the same properties as the InputDate control,
                including <b>format</b>, <b>min</b>, <b>max</b>, and <b>value</b>. The InputTime control also offers a
                <b>step</b> property that allows you to specify the number of minutes between entries in its drop-down
                list.</p>
            <p>
                The example below illustrates how to use the InputTime control in conjunction with the InputDate
                control. Notice that these controls work together to edit the same DateTime JavaScript Object
                and only update the part of the DateTime that they are responsible for.</p>
            <div class="row">
                <div class="col-md-6">
                    <app-tab>
                        <app-tab-pane title="HTML">
                            <div class="pane-content">
&lt;div&gt;
  &lt;label&gt;Bound InputDate with min, max, &amp;amp; format&lt;/label&gt;
  &lt;wj-input-date 
    value="today" 
    min="{&#8203;{ minDate | date }}"
    max="{&#8203;{ maxDate | date }}"
    format="MM/dd/yyyy"&gt;
  &lt;/wj-input-date&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;label&gt;Bound InputTime with min, max, &amp;amp; step&lt;/label&gt;
  &lt;wj-input-time 
    value="today" 
    step="15"
    min="07:00" 
    max="19:00"&gt;
  &lt;/wj-input-time&gt;
&lt;/div&gt;
&lt;p&gt;
  &lt;b&gt;Selected Date &amp;amp; Time: {&#8203;{ today | date: &#39;medium&#39; }}&lt;/b&gt;
&lt;/p&gt;
                            </div>
                        </app-tab-pane>
                        <app-tab-pane title="JS">
                            <div class="pane-content">
var today = new Date();
$scope.today = today;
$scope.minDate = new Date(today.getFullYear(), 0, 1);
$scope.maxDate = new Date(today.getFullYear(), 11, 31);
                            </div>
                        </app-tab-pane>
                    </app-tab>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div class="app-input-group">
                        <label>Bound InputDate with min, max, &amp; format</label>
                        <wj-input-date value="today" min="{{ minDate | date }}" max="{{ maxDate | date }}" format="MM/dd/yyyy">
                        </wj-input-date>
                    </div>
                    <div class="app-input-group">
                        <label>Bound InputTime with min, max, &amp; step</label>
                        <wj-input-time value="today" step="15" min="07:00" max="19:00">
                        </wj-input-time>
                    </div>
                    <p>
                        <b>Selected Date &amp; Time: {{ today | date: 'medium' }}</b>
                    </p>
                </div>
            </div>
        </div>

        <!-- ListBox -->
        <div>
            <h2>ListBox</h2>
            <p>
                The ListBox control displays a list of items and allows you to select items using your
                mouse and keyboard. Like the AutoComplete and ComboBox controls, you must specify the
                ListBox's <b>itemsSource</b> property in order to use the control.</p>
            <p>
                The example below allows you to select an item within the ListBox control, and also displays
                the control's <b>selectedIndex</b> and <b>selectedValue</b> properties.</p>
            <div class="row">
                <div class="col-md-6">
                    <app-tab>
                        <app-tab-pane title="HTML">
                            <div class="pane-content">
&lt;div&gt;
  &lt;wj-list-box 
    style="height:150px;width:250px;"
    items-source="cities"
    control="listBox"&gt;
  &lt;/wj-list-box&gt;
&lt;/div&gt;
&lt;p&gt;
  &lt;b&gt;selectedIndex: {&#8203;{ listBox.selectedIndex }}&lt;/b&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;b&gt;selectedValue: {&#8203;{ listBox.selectedValue }}&lt;/b&gt;
&lt;/p&gt;
                            </div>
                        </app-tab-pane>
                        <app-tab-pane title="JS">
                            <div class="pane-content">
$scope.listBox = null;
                            </div>
                        </app-tab-pane>
                    </app-tab>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div class="app-input-group">
                        <wj-list-box style="height:150px;width:250px;" items-source="cities" control="listBox">
                        </wj-list-box>
                    </div>
                    <p>
                        <b>selectedIndex: {{ listBox.selectedIndex }}</b></p>
                    <p>
                        <b>selectedValue: {{ listBox.selectedValue }}</b></p>
                </div>
            </div>
        </div>

        <!-- InputNumber -->
        <div>
            <h2>InputNumber</h2>
            <p>
                The InputNumber control allows you to edit numbers, preventing you from entering invalid
                data and optionally formatting the numeric value as it is edited. The InputNumber can be
                used without specifying any of its properties; however, you'll typically want to bind it
                to some data using the <b>value</b> property.</p>
            <p>
                In addition to the <b>value</b> property, the InputNumber control offers several other
                properties that can be used to alter its behavior, such as:</p>
            <ul>
                <li>
                    <b>min</b>: Specifies the minimum numeric value that can be entered.</li>
                <li>
                    <b>max</b>: Specifies the maximum numeric value that can be entered.</li>
                <li>
                    <b>step</b>: Specifies the amount to add or subtract from the current
                    value when the spinner buttons are clicked.</li>
                <li>
                    <b>format</b>: Specifies the numeric format used to display the number being
                    edited. The format property uses a .NET-style
                    <a href="http://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx" target="_blank">numeric format string</a>.
                </li>
            </ul>
            <p>
                The example below demonstrates how to use all of these properties.</p>
            <div class="row">
                <div class="col-md-6">
                    <app-tab>
                        <app-tab-pane title="HTML">
                            <div class="pane-content">
&lt;div&gt;
  &lt;label&gt;Unbound with "n0" format&lt;/label&gt;
  &lt;wj-input-number 
    format="n0"&gt;
  &lt;/wj-input-number&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;label&gt;Bound with "n" format&lt;/label&gt;
  &lt;wj-input-number
    value="pi" 
    format="n"&gt;
  &lt;/wj-input-number&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;label&gt;Bound with min (0), max (10), step, and "c2" format&lt;/label&gt;
  &lt;wj-input-number 
    value="price" 
    format="c2" 
    step=".5" 
    min="0" 
    max="10"&gt;
  &lt;/wj-input-number&gt;
&lt;/div&gt;
                            </div>
                        </app-tab-pane>
                        <app-tab-pane title="JS">
                            <div class="pane-content">
$scope.pi = Math.PI;
$scope.price = 3.5;
                            </div>
                        </app-tab-pane>
                    </app-tab>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div class="app-input-group">
                        <label>Unbound with "n0" format</label>
                        <wj-input-number format="n0">
                        </wj-input-number>
                    </div>
                    <div class="app-input-group">
                        <label>Bound with "n" format</label>
                        <wj-input-number value="pi" format="n">
                        </wj-input-number>
                    </div>
                    <div class="app-input-group">
                        <label>Bound with min (0), max (10), step, and "c2" format</label>
                        <wj-input-number value="price" format="c2" step=".5" min="0" max="10">
                        </wj-input-number>
                    </div>
                </div>
            </div>
        </div>

        <!-- Menu -->
        <div>
            <h2>Menu</h2>
            <p>
                The Menu control allows you to create a simple drop-down list with clickable items. The Menu's
                items can be defined directly or by using the <b>itemsSource</b> property similar to the ComboBox.
                To specify the text displayed on the Menu, you can set the <b>header</b> property.</p>
            <p>
                The Menu control offers two ways to handle user selections, specifying a command on each menu item
                and the <b>itemClicked</b> event. Unlike the <b>itemClicked</b> event, commands are objects that
                implement two methods:</p>
            <ul>
                <li>
                    <b>executeCommand(param)</b>: A method that executes the command.</li>
                <li>
                    <b>canExecuteCommand(param)</b>: A method that returns a Boolean value specifying whether or
                    not the command can be executed. If the return value is false, the menu item is disabled automatically.</li>
            </ul>
            <p>
                The example below demonstrates how to use both approaches.</p>
            <div class="row">
                <div class="col-md-6">
                    <app-tab>
                        <app-tab-pane title="HTML">
                            <div class="pane-content">
&lt;div&gt;
  &lt;label&gt;itemClicked Event&lt;/label&gt;
  &lt;wj-menu header="File" item-clicked="menuItemClicked(s)"&gt;
    &lt;wj-menu-item&gt;&lt;i class="fa fa-file-o"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt;New&lt;/b&gt;&lt;br&gt;&lt;small&gt;&lt;i&gt;create a new file&lt;/i&gt;&lt;/small&gt;&lt;/wj-menu-item&gt;
    &lt;wj-menu-item&gt;&lt;i class="fa fa-folder-open-o"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt;Open&lt;/b&gt;&lt;br&gt;&lt;small&gt;&lt;i&gt;open an existing file or folder&lt;/i&gt;&lt;/small&gt;&lt;/wj-menu-item&gt;
    &lt;wj-menu-item&gt;&lt;i class="fa fa-save"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt;Save&lt;/b&gt;&lt;br&gt;&lt;small&gt;&lt;i&gt;save the current file&lt;/i&gt;&lt;/small&gt;&lt;/wj-menu-item&gt;
    &lt;wj-menu-separator&gt;&lt;/wj-menu-separator&gt;
    &lt;wj-menu-item&gt;&lt;i class="fa fa-times"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt;Exit&lt;/b&gt;&lt;br&gt;&lt;small&gt;&lt;i&gt;exit the application&lt;/i&gt;&lt;/small&gt;&lt;/wj-menu-item&gt;
  &lt;/wj-menu&gt;
  &lt;wj-menu header="Edit" item-clicked="menuItemClicked(s)"&gt;
    &lt;wj-menu-item&gt;&lt;i class="fa fa-cut"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt;Cut&lt;/b&gt;&lt;br&gt;&lt;small&gt;&lt;i&gt;move the current selection to the clipboard&lt;/i&gt;&lt;/small&gt;&lt;/wj-menu-item&gt;
    &lt;wj-menu-item&gt;&lt;i class="fa fa-copy"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt;Copy&lt;/b&gt;&lt;br&gt;&lt;small&gt;&lt;i&gt;copy the current selection to the clipboard&lt;/i&gt;&lt;/small&gt;&lt;/wj-menu-item&gt;
    &lt;wj-menu-item&gt;&lt;i class="fa fa-paste"&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt;Paste&lt;/b&gt;&lt;br&gt;&lt;small&gt;&lt;i&gt;insert clipboard content at the cursor position&lt;/i&gt;&lt;/small&gt;&lt;/wj-menu-item&gt;
  &lt;/wj-menu&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;label&gt;Commands&lt;/label&gt;
  &lt;wj-menu header="Change Tax"&gt;
    &lt;wj-menu-item cmd="menuCommand" cmd-param=".25"&gt;+ 25%&lt;/wj-menu-item&gt;
    &lt;wj-menu-item cmd="menuCommand" cmd-param=".10"&gt;+ 10%&lt;/wj-menu-item&gt;
    &lt;wj-menu-item cmd="menuCommand" cmd-param=".05"&gt;+ 5%&lt;/wj-menu-item&gt;
    &lt;wj-menu-item cmd="menuCommand" cmd-param=".01"&gt;+ 1%&lt;/wj-menu-item&gt;
    &lt;wj-menu-separator&gt;&lt;/wj-menu-separator&gt;
    &lt;wj-menu-item cmd="menuCommand" cmd-param="-.01"&gt;- 1%&lt;/wj-menu-item&gt;
    &lt;wj-menu-item cmd="menuCommand" cmd-param="-.05"&gt;- 5%&lt;/wj-menu-item&gt;
    &lt;wj-menu-item cmd="menuCommand" cmd-param="-.10"&gt;- 10%&lt;/wj-menu-item&gt;
    &lt;wj-menu-item cmd="menuCommand" cmd-param="-.25"&gt;- 25%&lt;/wj-menu-item&gt;
  &lt;/wj-menu&gt;
  &lt;wj-input-number value="tax" format="p0" min="0" max="1" step=".05"&gt;&lt;/wj-input-number&gt;
&lt;/div&gt;
                            </div>
                        </app-tab-pane>
                        <app-tab-pane title="JS">
                            <div class="pane-content">
$scope.tax = .07;

$scope.menuItemClicked = function(menu) {
    alert('You\'ve selected option ' + menu.selectedIndex + ' from the ' + menu.header + ' menu!');
};

$scope.menuCommand = {
    executeCommand: function (arg) {
        $scope.tax += arg;
    },
    canExecuteCommand: function (arg) {
        if (wijmo.isNumber(arg)) {
            var val = $scope.tax + arg;
            return val >= 0 && val <= 1;="" }="" return="" false;="" }="" };=""></=></div>
                        </app-tab-pane>
                    </app-tab>
                </div>
                <div class="col-md-6">
                    <h4>Result (live):</h4>
                    <div class="app-input-group">
                        <label>itemClicked Event</label>
                        <wj-menu header="File" item-clicked="menuItemClicked(s)">
                            <wj-menu-item><i class="fa fa-file-o"></i>&nbsp;&nbsp;<b>New</b><br><small><i>create a new file</i></small></wj-menu-item>
                            <wj-menu-item><i class="fa fa-folder-open-o"></i>&nbsp;&nbsp;<b>Open</b><br><small><i>open an existing file or folder</i></small></wj-menu-item>
                            <wj-menu-item><i class="fa fa-save"></i>&nbsp;&nbsp;<b>Save</b><br><small><i>save the current file</i></small></wj-menu-item>
                            <wj-menu-separator></wj-menu-separator>
                            <wj-menu-item><i class="fa fa-times"></i>&nbsp;&nbsp;<b>Exit</b><br><small><i>exit the application</i></small></wj-menu-item>
                        </wj-menu>
                        <wj-menu header="Edit" item-clicked="menuItemClicked(s)">
                            <wj-menu-item><i class="fa fa-cut"></i>&nbsp;&nbsp;<b>Cut</b><br><small><i>move the current selection to the clipboard</i></small></wj-menu-item>
                            <wj-menu-item><i class="fa fa-copy"></i>&nbsp;&nbsp;<b>Copy</b><br><small><i>copy the current selection to the clipboard</i></small></wj-menu-item>
                            <wj-menu-item><i class="fa fa-paste"></i>&nbsp;&nbsp;<b>Paste</b><br><small><i>insert clipboard content at the cursor position</i></small></wj-menu-item>
                        </wj-menu>
                    </div>
                    <div class="app-input-group">
                        <label>Commands</label>
                        <wj-menu header="Change Tax">
                            <wj-menu-item cmd="menuCommand" cmd-param=".25">+ 25%</wj-menu-item>
                            <wj-menu-item cmd="menuCommand" cmd-param=".10">+ 10%</wj-menu-item>
                            <wj-menu-item cmd="menuCommand" cmd-param=".05">+ 5%</wj-menu-item>
                            <wj-menu-item cmd="menuCommand" cmd-param=".01">+ 1%</wj-menu-item>
                            <wj-menu-separator></wj-menu-separator>
                            <wj-menu-item cmd="menuCommand" cmd-param="-.01">- 1%</wj-menu-item>
                            <wj-menu-item cmd="menuCommand" cmd-param="-.05">- 5%</wj-menu-item>
                            <wj-menu-item cmd="menuCommand" cmd-param="-.10">- 10%</wj-menu-item>
                            <wj-menu-item cmd="menuCommand" cmd-param="-.25">- 25%</wj-menu-item>
                        </wj-menu>
                        <wj-input-number value="tax" format="p0" min="0" max="1" step=".05"></wj-input-number>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bringing it all together -->
        <!-- TODO -->

    </div>

</body>
</html>