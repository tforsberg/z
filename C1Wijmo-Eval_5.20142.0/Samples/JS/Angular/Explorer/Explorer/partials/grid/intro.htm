<div class="row-fluid">
    <div class="copy">
        <h3>
            Introduction
        </h3>
        <p>
            This view shows the <b>FlexGrid's</b> basic features. It binds the grid to a data source
            and allows you to select the number of data items, the selection mode, and the culture.
            Notice how the grid remains fast and fluid even with large numbers of data items.
            The <b>FlexGrid</b> achieves this performance by automatically virtualizing rows and
            columns.
        </p>

        <div class="collapsed-content collapse">
            <p>
                You can select cells and ranges with the keyboard and the mouse. The current selection
                will be updated on the screen automatically.
            </p>
            <p>
                You can resize and move columns by dragging with the mouse, and auto-size columns by
                double-clicking the column headers. If you press the control key while resizing a
                selected column, all selected columns will be resized.
            </p>
            <p>
                You can sort columns by clicking their headers. If you press the control key when you
                click the column header, the sort will be removed.
            </p>
            <p>
                The filter and navigation bars above the grid allow you to filter and navigate through
                the data. Both are implemented using the <b>ICollectionView</b> interface, exactly as
                you would write in C# and .NET.
            </p>
            <p>
                Notice that unlike the standard AngularJS search filter, this one supports multi-term
                searches, so if you type <b>us gad red</b>, the grid will show items that contain
                <b>all</b> these terms (country is 'US', product is 'Gadget', and color is 'red').
            </p>
        </div>
        <p>
            <button type="button" data-toggle="collapse"
                    data-target=".collapsed-content, .btn.btn-default.btn-xs.collapse"
                    class="btn btn-default btn-xs collapse in">
                Read more
            </button>
        </p>
    </div>

    <div class="row-fluid">

        <!-- search box -->
        <div class="row">
            <div class="col-md-4 col-md-offset-0 col-xs-10 col-xs-offset-1">
                <input type="text" class="form-control app-pad" placeholder="Filter" ng-model="ctx.filter" />
            </div>
            <div class="col-md-5 col-md-offset-3 col-xs-10 col-xs-offset-1">
                <wj-collection-view-navigator cv="ctx.flex.collectionView" class="pull-right" />
            </div>
        </div>

        <!-- the grid -->
        <wj-flex-grid
            class="grid"
            control="ctx.flex"
            items-source="ctx.data"
            items-source-changed="itemsSourceChangedHandler()">
        </wj-flex-grid>
    </div>

    <!-- commands -->
    <div class="row-fluid well">
        <div class="grid-sort-group">

            <!-- current selection -->
            <p>Selection: <b>{{ctx.flex.selection | cellRange}}</b></p>

            <!-- data size -->
            <wj-menu value="ctx.itemCount" header="Items">
                <wj-menu-item value="5">5</wj-menu-item>
                <wj-menu-item value="50">50</wj-menu-item>
                <wj-menu-item value="500">500</wj-menu-item>
                <wj-menu-item value="5000">5,000</wj-menu-item>
                <wj-menu-item value="50000">50,000</wj-menu-item>
                <wj-menu-item value="100000">100,000</wj-menu-item>
                <wj-menu-item value="500000">500,000</wj-menu-item>
                <wj-menu-item value="1000000">1,000,000</wj-menu-item>
            </wj-menu>

            <!-- allow add new -->
            <wj-menu value="ctx.flex.allowAddNew" header="Allow Add">
                <wj-menu-item value="true">True</wj-menu-item>
                <wj-menu-item value="false">False</wj-menu-item>
            </wj-menu>

            <!-- selection mode -->
            <wj-menu value="ctx.flex.selectionMode" header="Selection">
                <wj-menu-item value="0">None</wj-menu-item>
                <wj-menu-item value="1">Cell</wj-menu-item>
                <wj-menu-item value="2">CellRange</wj-menu-item>
                <wj-menu-item value="3">Row</wj-menu-item>
                <wj-menu-item value="4">RowRange</wj-menu-item>
                <wj-menu-item value="5">ListBox</wj-menu-item>
            </wj-menu>

            <!-- data maps -->
            <wj-menu value="ctx.dataMaps" header="Data Maps">
                <wj-menu-item value="true">On</wj-menu-item>
                <wj-menu-item value="false">Off</wj-menu-item>
            </wj-menu>

            <!-- formatting -->
            <wj-menu value="ctx.formatting" header="Formatting">
                <wj-menu-item value="true">On</wj-menu-item>
                <wj-menu-item value="false">Off</wj-menu-item>
            </wj-menu>

            <!-- culture -->
            <wj-menu value="ctx.culture" header="Culture">
                <wj-menu-item value="'en'">English</wj-menu-item>
                <wj-menu-item value="'de'">German</wj-menu-item>
                <wj-menu-item value="'it'">Italian</wj-menu-item>
                <wj-menu-item value="'fr'">French</wj-menu-item>
                <wj-menu-item value="'pt'">Portuguese</wj-menu-item>
                <wj-menu-item value="'ru'">Russian</wj-menu-item>
                <wj-menu-item value="'ja'">Japanese</wj-menu-item>
                <wj-menu-item value="'ko'">Korean</wj-menu-item>
            </wj-menu>

            <br />
            <br />

            <!-- testing the object model -->
            <button class="btn btn-default" ng-click="toggleColumnVisibility()">
                Show/Hide Column
            </button>
            <button class="btn btn-default" ng-click="changeColumnSize()">
                Resize Column
            </button>
            <button class="btn btn-default" ng-click="toggleRowVisibility()">
                Show/Hide Row
            </button>
            <button class="btn btn-default" ng-click="changeRowSize()">
                Resize Row
            </button>
            <button class="btn btn-default" ng-click="changeDefaultRowSize()">
                Default Row Size
            </button>
            <button class="btn btn-default" ng-click="changeScrollPosition()">
                Scroll Position
            </button>
        </div>
    </div>
</div>
