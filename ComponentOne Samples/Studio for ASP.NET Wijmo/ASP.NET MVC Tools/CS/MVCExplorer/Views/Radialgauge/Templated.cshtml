@{
	ViewBag.Title = "Templated";
	Layout = "~/Views/Shared/_WidgetLayout.cshtml";
}
@section header
{
	<script type="text/javascript">
		$(document).ready(function () {
			$("#gauge").wijradialgauge({
			    value: 100,
			    max: 150,
			    min: 0,
			    startAngle: -45,
			    sweepAngle: 270,
			    radius: 170,
			    origin: {
			        x: 0.5, y: 0.5
			    },
			    labels: {
			        offset: -30, //4F6B82
			        style: {
			            fill: "#556A7C",
			            stroke: "#556A7C"
			        }
			    },
			    tickMinor: {
			        position: "inside",
			        style: {
			            fill: "#556A7C",
			            stroke: "#556A7C"
			        },
			        interval: 2,
			        visible: true,
			        offset: 0
			    },
			    tickMajor: {
			        position: "center",
			        style: {
			            fill: "#556A7C",
			            stroke: "#556A7C"
			        },
			        interval: 10,
			        visible: true,
			        marker: function (canvas, startLocation) {
			            return dawnMark(canvas, startLocation);
			        }
			    },
			    ranges: [{
			        startWidth: 20,
			        endWidth: 20,
			        startValue: 20,
			        endValue: 50,
			        startDistance: 0.65,
			        endDistance: 0.65,
			        style: {
			            fill: "#BC8A8E",
			            stroke: "#BC8A8E"
			        }
			    },
                {
                    startWidth: 20,
                    endWidth: 20,
                    startValue: 100,
                    endValue: 130,
                    startDistance: 0.65,
                    endDistance: 0.65,
                    style: {
                        fill: "#58A85E",
                        stroke: "#58A85E"
                    }
                }
                ],
			    face: {
			        style: {},
			        template: function (ui) {
			            var url = "http://cdn.wijmo.com/images/gaugeFace.png";
			            return ui.canvas.image(url, ui.origin.x - ui.r, ui.origin.y - ui.r, ui.r * 2, ui.r * 2);
			            //                        var circle = ui.canvas.circle(ui.origin.x, ui.origin.y, ui.r - 3);
			            //                        circle.attr({ "stroke": "#6DC5D8", "stroke-width": 3, fill: "#fff" });
			            //                        return circle;
			        }
			    },
			    pointer: {
			        length: 1,
			        style: {
			            fill: "#BF551C",
			            stroke: "#BF551C"
			        },
			        template: function (startLocation, pointerInfo) {
			            return dawnArrow(this, startLocation, pointerInfo);
			        }
			    },
			    cap: {
			        behindPointer: false,
			        //                    template: function (ui) {
			        //                        ui.canvas.circle();
			        //                    },
			        style: {
			            fill: "#6DC5D8",
			            stroke: "#6DC5D8"
			        }
			    }
			});

			function dawnMark(canvas, startLocation) {
			    var x = startLocation.x, mark,
                y = startLocation.y,
                x1 = x,
                y1 = y + 2,
                x2 = x + 7,
                y2 = y + 2,
                x3 = x + 9,
                y3 = y,
                x4 = x + 7,
                y4 = y - 2,
                x5 = x,
                y5 = y - 2,
                arrPath = ["M", x1, y1, "L", x2, y2, "L", x3, y3, "L", x4, y4, "L", x5, y5, "z"];
			    mark = canvas.path(arrPath.concat(" "));
			    mark.attr({
			        fill: "#6DC5D8",
			        stroke: "#6DC5D8"
			    });
			    return mark;

			}

			function dawnArrow(canvas, startLocation, pointerInfo) {
			    var x = startLocation.x, arrow,
                y = startLocation.y,
                height = pointerInfo.width,
                width = pointerInfo.length,
                x1 = x,
                y1 = y + height / 2,
                x2 = x + 15,
                y2 = y - 10,
                x3 = x + 15,
                y3 = y,
                x4 = x + width,
                y4 = y,
                x5 = x + width,
                y5 = y + height,
                x6 = x + 15,
                y6 = y + height,
                x7 = x + 15,
                y7 = y + height + 10,
                arrPath = ["M", x1, y1, "L", x2, y2, "L", x3, y3, "L", x4, y4, "L", x5, y5, "L", x6, y6, "L", x7, y7, "z"];
			    arrow = canvas.path(arrPath.concat(" "));
			    arrow.attr({
			        fill: "#6DC5D8",
			        stroke: "#6DC5D8"
			    });
			    return arrow;
			}

			$("#btnExec").click(function () {
			    eval($("#code").val());
			})
		});
	
	</script>
}
<h2>
	Templated</h2>
<div class="main demo">
	<!-- Begin demo markup -->
	<div id="gauge">
	</div>
	<!-- End demo markup -->
	<div class="demo-options">
		<!-- Begin options markup -->
		<!-- End options markup -->
	</div>
</div>
@section description
{
	<p>
		This sample shows how to use <b>template</b> option.</p>
}
