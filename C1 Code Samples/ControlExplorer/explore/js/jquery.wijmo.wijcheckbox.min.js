var __extends = this.__extends || function (e, t) { function n() { this.constructor = e } n.prototype = t.prototype, e.prototype = new n }, wijmo; (function (e) { (function (t) { "use strict"; var n = jQuery, r = "wijradio", i = "wijmo-wijradio", s = 0, o = function (e) { function t() { e.apply(this, arguments) } return __extends(t, e), t.prototype._create = function () { var e = this, t = e.element, r = e.options.wijCSS, o, u, a, f, l, c; window.wijmoApplyWijTouchUtilEvents && (n = window.wijmoApplyWijTouchUtilEvents(n)), t.is(":radio") && (t.attr("id") || (t.attr("id", i + s), s += 1), t.parent().is("label") ? (u = t.parent().wrap(n("<div></div>").addClass(r.wijradioInputwrapper)).parent().wrap("<div></div>").parent().addClass(r.wijradio).addClass(r.widget), a = t.parent(), a.attr("for", t.attr("id")), u.find("." + r.wijradioInputwrapper).append(t), u.append(a)) : u = t.wrap(n("<div></div>").addClass(r.wijradioInputwrapper)).parent().wrap("<div></div>").parent().addClass(r.wijradio).addClass(r.widget), f = n("label[for='" + t.attr("id") + "']"), f.length > 0 && (u.append(f), f.attr("labelsign", "wij")), t.is(":disabled") && e._setOption("disabled", !0), l = n("<div></div>").addClass(r.wijradioBox).addClass(r.widget).addClass(r.stateDefault).addClass(r.cornerAll).append(n("<span></span>").addClass(r.wijradioIcon)), e.options.disabled && l.addClass(r.stateDisabled), c = l.children("." + r.wijradioIcon), u.append(l), c.addClass(r.icon).addClass(r.iconRadioOn), t.data("iconElement", c), t.data("boxElement", l), t.data("radiobuttonElement", u), l.removeClass(r.wijradioRelative).attr("role", "radio").bind("mouseover", function () { t.mouseover(null) }).bind("mouseout", function () { t.mouseout(null) }), (f.length === 0 || f.html() === "") && l.addClass(r.wijradioRelative), e._setDefaul(), t.bind("click.radio", function () { if (e.options.disabled) return; o = e.options.checked, e._refresh(), o !== e.element.is(":checked") && e._trigger("changed", null, { checked: e.options.checked }) }).bind("focus.radio", function () { if (e.options.disabled) return; l.addClass(r.stateFocus) }).bind("blur.radio", function () { if (e.options.disabled) return; l.removeClass(r.stateFocus) }), u.click(function () { if (e.options.disabled) return; if (f.length === 0 || f.html() === "") o = e.options.checked, t.prop("checked", !0), e._refresh(), t.change(), o !== e.element.is(":checked") && e._trigger("changed", null, { checked: e.options.checked }) }), u.bind("mouseover.radio", function () { if (e.options.disabled) return; l.addClass(r.stateHover) }).bind("mouseout.radio", function () { if (e.options.disabled) return; l.removeClass(r.stateHover) }), u.attr("title", t.attr("title"))) }, t.prototype._setOption = function (t, n) { var r = this, i = r.options.checked; e.prototype._setOption.call(this, t, n), t === "checked" && (r.element.prop("checked", n), r._refresh(), i !== n && r._trigger("changed", null, { checked: n })) }, t.prototype._setDefaul = function () { var e = this, t = e.options; t.checked !== undefined && t.checked !== null && this.element.prop("checked", t.checked), this.element.prop("checked") && (this.element.parents("." + t.wijCSS.wijradio).find("." + t.wijCSS.wijradioBox).children().removeClass(t.wijCSS.iconRadioOn).addClass(t.wijCSS.iconRadioOff), this.element.data("boxElement").addClass(t.wijCSS.stateActive).attr("aria-checked", !0), this.element.data("radiobuttonElement").addClass(t.wijCSS.stateChecked)) }, t.prototype._refresh = function () { var e = this.element.attr("name") || "", t = this, r = t.options.wijCSS, i; if (e === "") return; n("[name='" + e + "']").each(function (e, s) { return n(s).parents("." + r.wijradio).find("." + r.wijradioBox).children().removeClass(r.iconRadioOff).addClass(r.iconRadioOn), n(s).parents("." + r.wijradio).find("." + r.wijradioBox).removeClass(r.stateActive).attr("aria-checked", !1), n(s).parents("." + r.wijradio).removeClass(r.stateChecked), i = n(s).parents("." + r.wijradio).find(":radio"), i.wijradio("option", "checked") && i[0] !== t.element[0] && i.wijradio("setCheckedOption", !1), this }), t.element.is(":checked") && (t.element.data("iconElement").removeClass(r.iconRadioOn).addClass(r.iconRadioOff), t.element.data("boxElement").addClass(r.stateActive).attr("aria-checked", !0), t.element.data("radiobuttonElement").addClass(r.stateChecked)), t.options.checked = t.element.is(":checked") }, t.prototype.setCheckedOption = function (e) { var t = this, n = t.options; n.checked !== null && n.checked !== e && (n.checked = e, t._trigger("changed", null, { checked: e })) }, t.prototype.refresh = function () { this._refresh() }, t.prototype.destroy = function () { var t = this, n = t.element.parent().parent(); n.children("div." + t.options.wijCSS.wijradioBox).remove(), t.element.unwrap(), t.element.unwrap(), e.prototype.destroy.call(this) }, t }(e.wijmoWidget); t.wijradio = o; var u = function () { function e() { this.initSelector = ":jqmData(role='wijradio')", this.wijCSS = { wijradio: "wijmo-wijradio", wijradioBox: "wijmo-wijradio-box", wijradioIcon: "wijmo-wijradio-icon", wijradioInputwrapper: "wijmo-wijradio-inputwrapper", wijradioRelative: "wijmo-wijradio-relative" }, this.checked = null, this.changed = null } return e }(); o.prototype.options = n.extend(!0, {}, e.wijmoWidget.prototype.options, new u), n.wijmo.registerWidget(r, o.prototype) })(e.radio || (e.radio = {})); var t = e.radio })(wijmo || (wijmo = {}));
var __extends = this.__extends || function (e, t) { function n() { this.constructor = e } n.prototype = t.prototype, e.prototype = new n }, wijmo; (function (e) { (function (t) { "use strict"; var n = jQuery, r = "wijcheckbox", i = "wijcheckbox", s = 0, o = function (e) { function t() { e.apply(this, arguments) } return __extends(t, e), t.prototype._init = function () { var e = this, t = e.element, r = e.options, o, u, a, f, l; t.is(":checkbox") && (t.attr("id") || (t.attr("id", i + s), s += 1), t.parent().is("label") ? (o = t.parent().wrap(n("<div></div>").addClass(r.wijCSS.wijcheckboxInputwrapper)).parent().wrap("<div></div>").parent().addClass(r.wijCSS.wijcheckbox).addClass(r.wijCSS.widget), u = t.parent(), u.attr("for", t.attr("id")), o.find("." + r.wijCSS.wijcheckboxInputwrapper).append(t), o.append(u)) : o = t.wrap(n("<div></div>").addClass(r.wijCSS.wijcheckboxInputwrapper)).parent().wrap("<div></div>").parent().addClass(r.wijCSS.wijcheckbox).addClass(r.wijCSS.widget), a = n("label[for='" + t.attr("id") + "']"), a.length > 0 && (o.append(a), a.attr("labelsign", "C1")), t.is(":disabled") && e._setOption("disabled", !0), f = n("<div></div>").addClass(r.wijCSS.wijcheckboxBox).addClass(r.wijCSS.widget).addClass(r.wijCSS.stateDefault).addClass(r.wijCSS.cornerAll).append(n("<span></span>").addClass(r.wijCSS.wijcheckboxIcon)), r.disabled && f.addClass(r.wijCSS.stateDisabled), l = f.children("." + r.wijCSS.wijcheckboxIcon), o.append(f), t.data("iconElement", l), t.data("boxElement", f), t.data("checkboxElement", o), f.removeClass(r.wijCSS.wijcheckboxRelative).attr("role", "checkbox").bind("mouseover", function () { t.mouseover(null) }).bind("mouseout", function () { t.mouseout(null) }), (a.length === 0 || a.html() === "") && f.addClass(r.wijCSS.wijcheckboxRelative), t.bind("click.checkbox", function (t) { if (r.disabled) return; e.refresh(t), e._trigger("changed", null, { checked: e.options.checked }) }).bind("focus.checkbox", function () { if (r.disabled) return; f.addClass(r.wijCSS.stateFocus) }).bind("blur.checkbox", function () { if (r.disabled) return; f.removeClass(r.wijCSS.stateFocus).not("." + r.wijCSS.stateHover) }).bind("keydown.checkbox", function (t) { if (t.keyCode === 32) { if (r.disabled) return; e.refresh(null) } }), f.bind("click.checkbox", function (n) { if (r.disabled) return; t.get(0).checked = !t.get(0).checked, t.change(), t.focus(), e.refresh(n), e._trigger("changed", null, { checked: e.options.checked }) }), e._initCheckState(), e.refresh(null), o.bind("mouseover.checkbox", function (e) { if (r.disabled) return; f.addClass(r.wijCSS.stateHover) }).bind("mouseout.checkbox", function (e) { if (r.disabled) return; f.removeClass(r.wijCSS.stateHover).not("." + r.wijCSS.stateFocus) }), o.attr("title", t.attr("title"))) }, t.prototype._create = function () { window.wijmoApplyWijTouchUtilEvents && (n = window.wijmoApplyWijTouchUtilEvents(n)) }, t.prototype._setOption = function (t, n) { var r = this, i = r.options, s, o = i.checked; e.prototype._setOption.call(this, t, n), t === "checked" ? (r.element.get(0).checked = n, r.refresh(null), o !== n && r._trigger("changed", null, { checked: n })) : t === "disabled" && (s = r.element.data("boxElement"), r.element.prop("disabled", n), s && s.toggleClass(i.wijCSS.stateDisabled, n)) }, t.prototype._initCheckState = function () { var e = this, t = e.options; t.checked !== undefined && t.checked !== null && (e.element.get(0).checked = t.checked) }, t.prototype.refresh = function (e) { var t = this, n = t.options; n.checked = t.element.get(0).checked, t.element.data("iconElement").toggleClass(n.wijCSS.icon + " " + n.wijCSS.iconCheck, t.element.get(0).checked), t.element.data("boxElement").toggleClass(n.wijCSS.stateActive, t.element.get(0).checked).attr("aria-checked", t.element.get(0).checked), t.element.data("checkboxElement").toggleClass(n.wijCSS.stateChecked, t.element.get(0).checked), e && e.stopPropagation() }, t.prototype.destroy = function () { var t = this, n = t.element.parent().parent(); n.children("div." + t.options.wijCSS.wijcheckboxBox).remove(), t.element.unwrap(), t.element.unwrap(), e.prototype.destroy.call(this) }, t }(e.wijmoWidget); t.wijcheckbox = o; var u = function () { function e() { this.initSelector = ":jqmData(role='wijcheckbox')", this.wijCSS = { wijcheckbox: "wijmo-checkbox", wijcheckboxBox: "wijmo-checkbox-box", wijcheckboxIcon: "wijmo-checkbox-icon", wijcheckboxInputwrapper: "wijmo-checkbox-inputwrapper", wijcheckboxRelative: "wijmo-checkbox-relative" }, this.wijMobileCSS = { header: "ui-header ui-bar-a", content: "ui-body-b", stateDefault: "ui-btn ui-btn-b", stateHover: "ui-btn-down-c", stateActive: "ui-btn-down-b" }, this.checked = null, this.changed = null } return e }(); o.prototype.options = n.extend(!0, {}, e.wijmoWidget.prototype.options, new u), n.wijmo.registerWidget(r, o.prototype) })(e.checkbox || (e.checkbox = {})); var t = e.checkbox })(wijmo || (wijmo = {}));